/** A wrapper class for ints 
  * @author: Marc Corliss
  * */
class Integer {
    int num;

    int intValue() {
	return num;
    }

    Integer init(int n) {
	num = n;
	return this;
    }

    String digitToString(int d) {
	String s = null;
	if (d == 0)
	    s = "0";
	else if (d == 1) 
	    s = "1";
	else if (d == 2) 
	    s = "2";
	else if (d == 3) 
	    s = "3";
	else if (d == 4) 
	    s = "4";
	else if (d == 5) 
	    s = "5";
	else if (d == 6) 
	    s = "6";
	else if (d == 7) 
	    s = "7";
	else if (d == 8) 
	    s = "8";
	else if (d == 9) 
	    s = "9";
	return s;
    }

    String toString() {
	String s = "";
	int n = num;

	if (n < 0)
	    n = -n;
	
	if (n == 0)
	    s = "0";
	else {
	    while (n > 0) {
		int d = n % 10;
		s = digitToString(d).concat(s);
		n = n / 10;
	    }
	}

	if (num < 0)
	    s = "-".concat(s);

	return s;
    }

    boolean equals(Object o) {
	boolean ret = false;

	if (o == null) {
	    (new TextIO()).putString("Integer.equals called with null object\n");
	    (new Sys()).exit(-1);
	}

	if (o instanceof Integer) {
	    Integer i = (Integer)(o);
	    if (num == i.intValue())
		ret = true;
	}

	return ret;
    }
}

